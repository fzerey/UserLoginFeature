{"ast":null,"code":"var _jsxFileName = \"/home/furkan/assessment-react/frontend_2/src/VerificationPage/VerificationPage.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { userActions } from '../_actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass VerificationPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      code: '',\n      submitted: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      submitted: true\n    });\n    const {\n      email,\n      code\n    } = this.state;\n\n    if (email && code) {\n      this.props.verify(email, code);\n    }\n  }\n\n  render() {\n    const {\n      verifying\n    } = this.props;\n    const {\n      email,\n      code,\n      submitted\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \"Verify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        name: \"form-control\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"email\",\n            value: email,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), submitted && !email && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"help-block text-danger\",\n            children: \"Email is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"code\",\n            children: \"Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"code\",\n            value: code,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), submitted && !code && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"help-block text-danger\",\n            children: \"Verification code is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary text-center\",\n            disabled: verifying,\n            children: [verifying && /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"spinner-border spinner-border-sm\",\n              role: \"status\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), \"Verify\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            className: \"btn btn-link\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            className: \"btn btn-link\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    verifying\n  } = state.verification;\n  return {\n    verifying\n  };\n}\n\nconst actionCreators = {\n  verify: userActions.verify\n};\nconst connectedVerificationPage = connect(mapState, actionCreators)(VerificationPage);\nexport { connectedVerificationPage as VerificationPage };","map":{"version":3,"sources":["/home/furkan/assessment-react/frontend_2/src/VerificationPage/VerificationPage.js"],"names":["React","connect","Link","userActions","VerificationPage","Component","constructor","props","state","email","code","submitted","handleChange","bind","handleSubmit","e","name","value","target","setState","preventDefault","verify","render","verifying","mapState","verification","actionCreators","connectedVerificationPage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { userActions } from '../_actions';\n\nclass VerificationPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            code: '',\n            submitted: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        const { name, value } = e.target;\n        this.setState({ [name]: value });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        this.setState({ submitted: true });\n        const { email, code } = this.state;\n        if (email && code) {\n            this.props.verify(email, code);\n        }\n    }\n\n    render() \n    {\n        const { verifying } = this.props;\n        const { email, code, submitted } = this.state;\n        return (\n            <div className=\"container\">\n                <h2 className='text-center'>Verify</h2>\n                <form name=\"form-control\" onSubmit={this.handleSubmit}>\n                    <div className='form-group'>\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"text\" className=\"form-control\" name=\"email\" value={email} onChange={this.handleChange} />\n                        {submitted && !email &&\n                            <div className=\"help-block text-danger\">Email is required</div>\n                        }\n                    </div>\n                    <div className='form-group'>\n                        <label htmlFor=\"code\">Code</label>\n                        <input type=\"text\" className=\"form-control\" name=\"code\" value={code} onChange={this.handleChange} />\n                        {submitted && !code &&\n                            <div className=\"help-block text-danger\">Verification code is required</div>\n                        }\n                    </div>\n                    <div className=\"form-group\">\n                        <button className=\"btn btn-primary text-center\" disabled={verifying} >\n                        {verifying &&\n                            <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                        }\n                        Verify</button>\n\n                        \n                    </div>\n                    <div>\n                        <Link to=\"/login\" className=\"btn btn-link\">Login</Link>\n                        <Link to=\"/register\" className=\"btn btn-link\">Register</Link>\n                    </div>\n                    \n                </form>\n            </div>\n        );\n    }\n}\n\nfunction mapState(state) {\n    const { verifying } = state.verification;\n    return { verifying };\n}\n\nconst actionCreators = {\n    verify: userActions.verify\n};\n\nconst connectedVerificationPage = connect(mapState, actionCreators)(VerificationPage);\nexport { connectedVerificationPage as VerificationPage };"]},"metadata":{},"sourceType":"module"}