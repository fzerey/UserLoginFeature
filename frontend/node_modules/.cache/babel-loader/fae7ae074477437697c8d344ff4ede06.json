{"ast":null,"code":"var _jsxFileName = \"/home/furkan/assessment-react/frontend_2/src/App/App.js\";\nimport React from 'react';\nimport { Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { history } from '../_helpers';\nimport { alertActions } from '../_actions';\nimport { PrivateRoute } from '../_components';\nimport { HomePage } from '../HomePage';\nimport { LoginPage } from '../LoginPage';\nimport { RegisterPage } from '../RegisterPage';\nimport { VerificationPage } from '../VerificationPage';\nimport { RetrievePasswordPage } from '../RetrievePasswordPage/RetrievePasswordPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    history.listen((location, action) => {\n      // clear alert on location change\n      this.props.clearAlerts();\n    });\n  }\n\n  render() {\n    const {\n      alert\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8 offset-md-2\",\n        children: [alert.message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `alert ${alert.type}`,\n          children: alert.validationErrors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(Router, {\n          history: history,\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(PrivateRoute, {\n              exact: true,\n              path: \"/\",\n              component: HomePage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/login\",\n              component: LoginPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/register\",\n              component: RegisterPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/verify\",\n              component: VerificationPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/retrieve\",\n              component: RetrievePasswordPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n              from: \"*\",\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    alert\n  } = state;\n  return {\n    alert\n  };\n}\n\nconst actionCreators = {\n  clearAlerts: alertActions.clear\n};\nconst connectedApp = connect(mapState, actionCreators)(App);\nexport { connectedApp as App };","map":{"version":3,"sources":["/home/furkan/assessment-react/frontend_2/src/App/App.js"],"names":["React","Router","Route","Switch","Redirect","connect","history","alertActions","PrivateRoute","HomePage","LoginPage","RegisterPage","VerificationPage","RetrievePasswordPage","App","Component","constructor","props","listen","location","action","clearAlerts","render","alert","message","type","validationErrors","mapState","state","actionCreators","clear","connectedApp"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,MAAxB,EAAgCC,QAAhC,QAAgD,kBAAhD;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,oBAAT,QAAqC,8CAArC;;;AAEA,MAAMC,GAAN,SAAkBd,KAAK,CAACe,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEAX,IAAAA,OAAO,CAACY,MAAR,CAAe,CAACC,QAAD,EAAWC,MAAX,KAAsB;AACjC;AACA,WAAKH,KAAL,CAAWI,WAAX;AACH,KAHD;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKN,KAAvB;AACA,wBACQ;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,mBACKM,KAAK,CAACC,OAAN,iBAAmB;AAAK,UAAA,SAAS,EAAG,SAAQD,KAAK,CAACE,IAAK,EAApC;AAAA,oBAAwCF,KAAK,CAACG;AAA9C;AAAA;AAAA;AAAA;AAAA,gBADxB,eAEI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEpB,OAAjB;AAAA,iCACI,QAAC,MAAD;AAAA,oCACI,QAAC,YAAD;AAAc,cAAA,KAAK,MAAnB;AAAoB,cAAA,IAAI,EAAC,GAAzB;AAA6B,cAAA,SAAS,EAAEG;AAAxC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,QAAZ;AAAqB,cAAA,SAAS,EAAEC;AAAhC;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,WAAZ;AAAwB,cAAA,SAAS,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,SAAZ;AAAsB,cAAA,SAAS,EAAEC;AAAjC;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,WAAZ;AAAwB,cAAA,SAAS,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI,QAAC,QAAD;AAAU,cAAA,IAAI,EAAC,GAAf;AAAmB,cAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADR;AAiBH;;AA7B6B;;AAgClC,SAASc,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAM;AAAEL,IAAAA;AAAF,MAAYK,KAAlB;AACA,SAAO;AAAEL,IAAAA;AAAF,GAAP;AACH;;AAED,MAAMM,cAAc,GAAG;AACnBR,EAAAA,WAAW,EAAEd,YAAY,CAACuB;AADP,CAAvB;AAIA,MAAMC,YAAY,GAAG1B,OAAO,CAACsB,QAAD,EAAWE,cAAX,CAAP,CAAkCf,GAAlC,CAArB;AACA,SAASiB,YAAY,IAAIjB,GAAzB","sourcesContent":["import React from 'react';\nimport { Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { history } from '../_helpers';\nimport { alertActions } from '../_actions';\nimport { PrivateRoute } from '../_components';\nimport { HomePage } from '../HomePage';\nimport { LoginPage } from '../LoginPage';\nimport { RegisterPage } from '../RegisterPage';\nimport { VerificationPage } from '../VerificationPage';\nimport { RetrievePasswordPage } from '../RetrievePasswordPage/RetrievePasswordPage';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        history.listen((location, action) => {\n            // clear alert on location change\n            this.props.clearAlerts();\n        });\n    }\n\n    render() {\n        const { alert } = this.props;\n        return (\n                <div className='container'>\n                    <div className='col-md-8 offset-md-2'>\n                        {alert.message &&   <div className={`alert ${alert.type}`}>{alert.validationErrors}</div>}\n                        <Router history={history}>\n                            <Switch>\n                                <PrivateRoute exact path=\"/\" component={HomePage} />\n                                <Route path=\"/login\" component={LoginPage} />\n                                <Route path=\"/register\" component={RegisterPage} />\n                                <Route path=\"/verify\" component={VerificationPage} />\n                                <Route path=\"/retrieve\" component={RetrievePasswordPage} />\n                                <Redirect from=\"*\" to=\"/\" />\n                            </Switch>\n                        </Router>\n                    </div>\n                </div>\n        );\n    }\n}\n\nfunction mapState(state) {\n    const { alert } = state;\n    return { alert };\n}\n\nconst actionCreators = {\n    clearAlerts: alertActions.clear\n};\n\nconst connectedApp = connect(mapState, actionCreators)(App);\nexport { connectedApp as App };"]},"metadata":{},"sourceType":"module"}