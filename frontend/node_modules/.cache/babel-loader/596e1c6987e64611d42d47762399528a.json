{"ast":null,"code":"var _jsxFileName = \"/home/furkan/assessment-react/frontend_2/src/RegisterPage/RegisterPage.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { userActions } from '../_actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RegisterPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {\n        firstName: '',\n        lastName: '',\n        username: '',\n        email: '',\n        password: ''\n      },\n      submitted: false,\n      error: undefined\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    const {\n      user\n    } = this.state;\n    this.setState({\n      user: { ...user,\n        [name]: value\n      }\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setState({\n      submitted: true\n    });\n    const {\n      user\n    } = this.state;\n\n    if (user.firstName && user.lastName && user.username && user.password) {\n      try {\n        this.props.register(user);\n      } catch (error) {\n        this.setState({\n          error: error.validationErrors\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      registering\n    } = this.props;\n    const {\n      user,\n      submitted,\n      error\n    } = this.state;\n    const {\n      usernameError,\n      firstNameError,\n      lastNameError,\n      emailError,\n      passwordError\n    } = error;\n    console.log(registering);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        name: \"form-control\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'form-group' + (submitted && !user.firstName ? ' has-error' : ''),\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstName\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: firstNameError ? \"form-control is-invalid\" : \"form-control\",\n            name: \"firstName\",\n            value: user.firstName,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: firstNameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), submitted && !user.firstName && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"help-block text-danger\",\n            children: \"First Name is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'form-group' + (submitted && !user.lastName ? ' has-error' : ''),\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastName\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"lastName\",\n            value: user.lastName,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), submitted && !user.lastName && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"help-block text-danger\",\n            children: \"Last Name is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'form-group' + (submitted && !user.username ? ' has-error' : ''),\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"username\",\n            value: user.username,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), submitted && !user.username && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"help-block text-danger\",\n            children: \"Username is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'form-group' + (submitted && !user.email ? ' has-error' : ''),\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"E-Mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"email\",\n            value: user.email,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), submitted && !user.email && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"help-block text-danger\",\n            children: \"E-Mail is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'form-group' + (submitted && !user.password ? ' has-error' : ''),\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            name: \"password\",\n            value: user.password,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), submitted && !user.password && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"help-block text-danger\",\n            children: \"Password is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            disabled: registering,\n            children: [registering && /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"spinner-border spinner-border-sm\",\n              role: \"status\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), \"Register\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            className: \"btn btn-link\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    registering\n  } = state.registration;\n  return {\n    registering\n  };\n}\n\nconst actionCreators = {\n  register: userActions.register\n};\nconst connectedRegisterPage = connect(mapState, actionCreators)(RegisterPage);\nexport { connectedRegisterPage as RegisterPage };","map":{"version":3,"sources":["/home/furkan/assessment-react/frontend_2/src/RegisterPage/RegisterPage.js"],"names":["React","Link","connect","userActions","RegisterPage","Component","constructor","props","state","user","firstName","lastName","username","email","password","submitted","error","undefined","handleChange","bind","handleSubmit","event","name","value","target","setState","preventDefault","register","validationErrors","render","registering","usernameError","firstNameError","lastNameError","emailError","passwordError","console","log","mapState","registration","actionCreators","connectedRegisterPage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { userActions } from '../_actions';\n\nclass RegisterPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: {\n                firstName: '',\n                lastName: '',\n                username: '',\n                email: '',\n                password: ''\n            },\n            submitted: false,\n            error: undefined\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        const { name, value } = event.target;\n        const { user } = this.state;\n        this.setState({\n            user: {\n                ...user,\n                [name]: value\n            }\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        this.setState({ submitted: true });\n        const { user } = this.state;\n        if (user.firstName && user.lastName && user.username && user.password) {\n            try{\n                this.props.register(user);\n            }catch(error){\n                this.setState({error: error.validationErrors});\n            }\n        }\n    }\n\n    render() {\n        const { registering  } = this.props;\n        const { user, submitted, error } = this.state;\n        const {usernameError, firstNameError, lastNameError, emailError, passwordError} = error;\n        console.log(registering);\n        return (\n            <div className=\"container\">\n                <h2 className='text-center'>Register</h2>\n                <form name=\"form-control\" onSubmit={this.handleSubmit}>\n                    <div className={'form-group' + (submitted && !user.firstName ? ' has-error' : '')}>\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" className={firstNameError ? \"form-control is-invalid\": \"form-control\"} name=\"firstName\" value={user.firstName} onChange={this.handleChange} />\n                        <div className=\"invalid-feedback\">{firstNameError}</div>\n                        {submitted && !user.firstName &&\n                            <div className=\"help-block text-danger\">First Name is required</div>\n                        }\n                    </div>\n                    <div className={'form-group' + (submitted && !user.lastName ? ' has-error' : '')}>\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" className=\"form-control\" name=\"lastName\" value={user.lastName} onChange={this.handleChange} />\n                        {submitted && !user.lastName &&\n                            <div className=\"help-block text-danger\">Last Name is required</div>\n                        }\n                    </div>\n                    <div className={'form-group' + (submitted && !user.username ? ' has-error' : '')}>\n                        <label htmlFor=\"username\">Username</label>\n                        <input type=\"text\" className=\"form-control\" name=\"username\" value={user.username} onChange={this.handleChange} />\n                        {submitted && !user.username &&\n                            <div className=\"help-block text-danger\">Username is required</div>\n                        }\n                    </div>\n                    <div className={'form-group' + (submitted && !user.email ? ' has-error' : '')}>\n                        <label htmlFor=\"email\">E-Mail</label>\n                        <input type=\"text\" className=\"form-control\" name=\"email\" value={user.email} onChange={this.handleChange} />\n                        {submitted && !user.email &&\n                            <div className=\"help-block text-danger\">E-Mail is required</div>\n                        }\n                    </div>\n                    <div className={'form-group' + (submitted && !user.password ? ' has-error' : '')}>\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" className=\"form-control\" name=\"password\" value={user.password} onChange={this.handleChange} />\n                        {submitted && !user.password &&\n                            <div className=\"help-block text-danger\">Password is required</div>\n                        }\n                    </div>\n                    <div className=\"form-group text-center\">\n                        <button className=\"btn btn-primary\" disabled={registering}>\n                        {registering && \n                            <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                        }\n                        Register</button>\n                        <Link to=\"/login\" className=\"btn btn-link\">Login</Link>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nfunction mapState(state) {\n    const { registering } = state.registration;\n    return { registering };\n}\n\nconst actionCreators = {\n    register: userActions.register\n}\n\nconst connectedRegisterPage = connect(mapState, actionCreators)(RegisterPage);\nexport { connectedRegisterPage as RegisterPage };"]},"metadata":{},"sourceType":"module"}